{"version":3,"sources":["AppNavigation.js"],"names":[],"mappingsfile":"AppNavigation.min.js","sourcesContent":["(function (namespace, $) {\r\n\t\"use strict\";\r\n\r\n\tvar AppNavigation = function () {\r\n\t\t// Create reference to this instance\r\n\t\tvar o = this;\r\n\t\t// Initialize app when document is ready\r\n\t\t$(document).ready(function () {\r\n\t\t\to.initialize();\r\n\t\t});\r\n\r\n\t};\r\n\tvar p = AppNavigation.prototype;\r\n\r\n\t// =========================================================================\r\n\t// MEMBERS\r\n\t// =========================================================================\r\n\r\n\t// Constant\r\n\tAppNavigation.MENU_MAXIMIZED = 1;\r\n\tAppNavigation.MENU_COLLAPSED = 2;\r\n\tAppNavigation.MENU_HIDDEN = 3;\r\n\r\n\t// Private\r\n\tp._lastOpened = null;\r\n\r\n\t// =========================================================================\r\n\t// INIT\r\n\t// =========================================================================\r\n\r\n\tp.initialize = function () {\r\n\t\tthis._enableEvents();\r\n\t\t\r\n\t\tthis._invalidateMenu();\r\n\t\tthis._evalMenuScrollbar();\r\n\t};\r\n\r\n\t// =========================================================================\r\n\t// EVENTS\r\n\t// =========================================================================\r\n\r\n\t// events\r\n\tp._enableEvents = function () {\r\n\t\tvar o = this;\r\n\r\n\t\t// Window events\r\n\t\t$(window).on('resize', function (e) {\r\n\t\t\to._handleScreenSize(e);\r\n\t\t});\r\n\t\t\r\n\t\t// Menu events\r\n\t\t$('[data-toggle=\"menubar\"]').on('click', function (e) {\r\n\t\t\to._handleMenuToggleClick(e);\r\n\t\t});\r\n\t\t$('[data-dismiss=\"menubar\"]').on('click', function (e) {\r\n\t\t\to._handleMenubarLeave();\r\n\t\t});\r\n\t\t$('#main-menu').on('click', 'li', function (e) {\r\n\t\t\to._handleMenuItemClick(e);\r\n\t\t});\r\n\t\t$('#main-menu').on('click', 'a', function (e) {\r\n\t\t\to._handleMenuLinkClick(e);\r\n\t\t});\r\n\t\t$('body.menubar-hoverable').on('mouseenter', '#menubar', function (e) {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\to._handleMenubarEnter();\r\n\t\t\t}, 1);\r\n\t\t});\r\n\t};\r\n\r\n\t// handlers\r\n\tp._handleScreenSize = function (e) {\r\n\t\tthis._invalidateMenu();\r\n\t\tthis._evalMenuScrollbar(e);\r\n\t};\r\n\r\n\t// =========================================================================\r\n\t// MENU TOGGLER\r\n\t// =========================================================================\r\n\r\n\tp._handleMenuToggleClick = function (e) {\r\n\t\tif (!materialadmin.App.isBreakpoint('xs')) {\r\n\t\t\t$('body').toggleClass('menubar-pin');\r\n\t\t}\r\n\r\n\t\tvar state = this.getMenuState();\r\n\r\n\t\tif (state === AppNavigation.MENU_COLLAPSED) {\r\n\t\t\tthis._handleMenubarEnter();\r\n\t\t}\r\n\t\telse if (state === AppNavigation.MENU_MAXIMIZED) {\r\n\t\t\tthis._handleMenubarLeave();\r\n\t\t}\r\n\t\telse if (state === AppNavigation.MENU_HIDDEN) {\r\n\t\t\tthis._handleMenubarEnter();\r\n\t\t}\r\n\t};\r\n\r\n\t// =========================================================================\r\n\t// MAIN BAR\r\n\t// =========================================================================\r\n\r\n\tp._handleMenuItemClick = function (e) {\r\n\t\te.stopPropagation();\r\n\r\n\t\tvar item = $(e.currentTarget);\r\n\t\tvar submenu = item.find('> ul');\r\n\t\tvar parentmenu = item.closest('ul');\r\n\r\n\t\tthis._handleMenubarEnter(item);\r\n\t\t\r\n\t\tif (submenu.children().length !== 0) {\r\n\t\t\tthis._closeSubMenu(parentmenu);\r\n\t\t\t\r\n\t\t\tvar menuIsCollapsed = this.getMenuState() === AppNavigation.MENU_COLLAPSED;\r\n\t\t\tif(menuIsCollapsed || item.hasClass('expanded') === false) {\r\n\t\t\t\tthis._openSubMenu(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tp._handleMenubarEnter = function (menuItem) {\r\n\t\tvar o = this;\r\n\t\tvar offcanvasVisible = $('body').hasClass('offcanvas-left-expanded');\r\n\t\tvar menubarExpanded = $('#menubar').data('expanded');\r\n\t\tvar menuItemClicked = (menuItem !== undefined);\r\n\r\n\t\t// Check if the menu should open\r\n\t\tif ((menuItemClicked === true || offcanvasVisible === false) && menubarExpanded !== true) {\r\n\t\t\t// Add listener to close the menubar\r\n\t\t\t$('#content').one('mouseover', function (e) {\r\n\t\t\t\to._handleMenubarLeave();\r\n\t\t\t});\r\n\r\n\t\t\t// Add open variables\r\n\t\t\t$('body').addClass('menubar-visible');\r\n\t\t\t$('#menubar').data('expanded', true);\r\n\r\n\t\t\t// Triger enter event\r\n\t\t\t$('#menubar').triggerHandler('enter');\r\n\r\n\r\n\t\t\tif (menuItemClicked === false) {\r\n\t\t\t\t// If there is a previous opened item, open it and all of its parents\r\n\t\t\t\tif (this._lastOpened) {\r\n\t\t\t\t\tvar o = this;\r\n\t\t\t\t\tthis._openSubMenu(this._lastOpened, 0);\r\n\t\t\t\t\tthis._lastOpened.parents('.gui-folder').each(function () {\r\n\t\t\t\t\t\to._openSubMenu($(this), 0);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Else open the active item\r\n\t\t\t\t\tvar item = $('#main-menu > li.active');\r\n\t\t\t\t\tthis._openSubMenu(item, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tp._handleMenubarLeave = function () {\r\n\t\t$('body').removeClass('menubar-visible');\r\n\t\t\r\n\t\t// Don't close the menus when it is pinned on large viewports\r\n\t\tif (materialadmin.App.minBreakpoint('md')) {\r\n\t\t\tif ($('body').hasClass('menubar-pin')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t$('#menubar').data('expanded', false);\r\n\r\n\r\n\t\t// Never close the menu on extra small viewports\r\n\t\tif (materialadmin.App.isBreakpoint('xs') === false) {\r\n\t\t\tthis._closeSubMenu($('#main-menu'));\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tp._handleMenuLinkClick = function (e) {\r\n\t\t// Prevent the link from firing when the menubar isn't visible\r\n\t\tif (this.getMenuState() !== AppNavigation.MENU_MAXIMIZED) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t};\r\n\r\n\t// =========================================================================\r\n\t// OPEN / CLOSE MENU\r\n\t// =========================================================================\r\n\r\n\tp._closeSubMenu = function (menu) {\r\n\t\tvar o = this;\r\n\t\tmenu.find('> li > ul').stop().slideUp(170, function () {\r\n\t\t\t$(this).closest('li').removeClass('expanded');\r\n\t\t\to._evalMenuScrollbar();\r\n\t\t});\r\n\t};\r\n\r\n\tp._openSubMenu = function (item, duration) {\r\n\t\tvar o = this;\r\n\t\tif (typeof (duration) === 'undefined') {\r\n\t\t\tduration = 170;\r\n\t\t}\r\n\t\t\r\n\t\t// Remember the last opened item\r\n\t\tthis._lastOpened = item;\r\n\r\n\t\t// Expand the menu\r\n\t\titem.addClass('expanding');\r\n\t\titem.find('> ul').stop().slideDown(duration, function () {\r\n\t\t\titem.addClass('expanded');\r\n\t\t\titem.removeClass('expanding');\r\n\r\n\t\t\t// Check scrollbars\r\n\t\t\to._evalMenuScrollbar();\r\n\r\n\t\t\t// Manually remove the style, jQuery sometimes failes to remove it\r\n\t\t\t$('#main-menu ul').removeAttr('style');\r\n\t\t});\r\n\t};\r\n\r\n\t// =========================================================================\r\n\t// UTILS\r\n\t// =========================================================================\r\n\r\n\tp._invalidateMenu = function () {\r\n\t\t// Retrieve active link\r\n\t\tvar selectedLink = $('#main-menu a.active');\r\n\r\n\t\t// Expand all parent submenu's of the active link so it will be visible on startup\r\n\t\tselectedLink.parentsUntil($('#main-menu')).each(function () {\r\n\t\t\tif ($(this).is('li')) {\r\n\t\t\t\t$(this).addClass('active');\r\n\t\t\t\t$(this).addClass('expanded');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// When invalidating, dont expand the first submenu when the menu is collapsed\r\n\t\tif (this.getMenuState() === AppNavigation.MENU_COLLAPSED) {\r\n\t\t\t$('#main-menu').find('> li').removeClass('expanded');\r\n\t\t}\r\n\r\n\t\t// Check if the menu is visible\r\n\t\tif ($('body').hasClass('menubar-visible')) {\r\n\t\t\tthis._handleMenubarEnter();\r\n\t\t}\r\n\r\n\t\t// Trigger event\r\n\t\t$('#main-menu').triggerHandler('ready');\r\n\r\n\t\t// Add the animate class for CSS transitions.\r\n\t\t// It solves the slow initiation bug in IE, \r\n\t\t// wich makes the collapse visible on startup\r\n\t\t$('#menubar').addClass('animate');\r\n\t};\r\n\r\n\tp.getMenuState = function () {\r\n\t\t// By using the CSS properties, we can attach \r\n\t\t// states to CSS properties and therefor control states in CSS\r\n\t\tvar matrix = $('#menubar').css(\"transform\");\r\n\t\tvar values = (matrix) ? matrix.match(/-?[\\d\\.]+/g) : null;\r\n\t\t\t\r\n\t\tvar menuState = AppNavigation.MENU_MAXIMIZED;\r\n\t\tif (values === null) {\r\n\t\t\tif ($('#menubar').width() <= 100) {\r\n\t\t\t\tmenuState = AppNavigation.MENU_COLLAPSED;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmenuState = AppNavigation.MENU_MAXIMIZED;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (values[4] === '0') {\r\n\t\t\t\tmenuState = AppNavigation.MENU_MAXIMIZED;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmenuState = AppNavigation.MENU_HIDDEN;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn menuState;\r\n\t};\r\n\r\n\tp._evalMenuScrollbar = function () {\r\n\t\tif (!$.isFunction($.fn.nanoScroller)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// First calculate the footer height\r\n\t\tvar footerHeight = $('#menubar .menubar-foot-panel').outerHeight();\r\n\t\tfooterHeight = Math.max(footerHeight, 1);\r\n\t\t$('.menubar-scroll-panel').css({'padding-bottom': footerHeight});\r\n\t\t\r\n\t\t\r\n\t\t// Check if there is a menu\r\n\t\tvar menu = $('#menubar');\r\n\t\tif (menu.length === 0)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// Get scrollbar elements\r\n\t\tvar menuScroller = $('.menubar-scroll-panel');\r\n\t\tvar parent = menuScroller.parent();\r\n\r\n\t\t// Add the scroller wrapper\r\n\t\tif (parent.hasClass('nano-content') === false) {\r\n\t\tmenuScroller.wrap('<div class=\"nano\"><div class=\"nano-content\"></div></div>');\r\n\t\t}\r\n\r\n\t\t// Set the correct height\r\n\t\tvar height = $(window).height() - menu.position().top - menu.find('.nano').position().top;\r\n\t\tvar scroller = menuScroller.closest('.nano');\r\n\t\tscroller.css({height: height});\r\n\r\n\t\t// Add the nanoscroller\r\n\t\tscroller.nanoScroller({preventPageScrolling: true, iOSNativeScrolling: true});\r\n\t};\r\n\r\n\r\n\t// =========================================================================\r\n\t// DEFINE NAMESPACE\r\n\t// =========================================================================\r\n\r\n\twindow.materialadmin.AppNavigation = new AppNavigation;\r\n}(this.materialadmin, jQuery)); // pass in (namespace, jQuery):\r\n"],"sourceRoot":"/source/"}